<Window x:Class="CardMaker.CardMakerMain"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
		xmlns:local="clr-namespace:CardMaker"
		xmlns:System="clr-namespace:System;assembly=mscorlib"
        mc:Ignorable="d"
        Title="Card Maker" Height="569" Width="1800" MinHeight="695" >
	<Window.CommandBindings>
		<CommandBinding Command="Save" Executed="SaveCommandBinding_Executed"/>
	</Window.CommandBindings>
	<Window.InputBindings>
		<KeyBinding Key="S" Modifiers="Control" Command="Save"/>
	</Window.InputBindings>
	<Window.Resources>
		<Style TargetType="ListViewItem">
			<Style.Resources>
				<SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="Red"/>
			</Style.Resources>
		</Style>
		
		<BooleanToVisibilityConverter x:Key="BoolToVis"/>
		<local:EnumBooleanConverter x:Key="EnumToBool" />
		<ObjectDataProvider x:Key="CooldownUnitsEnum" MethodName="GetValues" ObjectType="{x:Type System:Enum}">
			<ObjectDataProvider.MethodParameters>
				<x:Type TypeName="local:CooldownUnits"/>
			</ObjectDataProvider.MethodParameters>
		</ObjectDataProvider>
		<ObjectDataProvider x:Key="FieldTypeEnum" MethodName="GetValues" ObjectType="{x:Type System:Enum}">
			<ObjectDataProvider.MethodParameters>
				<x:Type TypeName="local:FieldType"/>
			</ObjectDataProvider.MethodParameters>
		</ObjectDataProvider>
	</Window.Resources>
	<StackPanel Orientation="Vertical">
		<Menu>
			<MenuItem Header="_File">
				<MenuItem Header="_Test Status" Click="TestStatusBarMenuItem_Click" Visibility="Collapsed"></MenuItem>
				<MenuItem Header="_Save" Command="Save" InputGestureText="Ctrl+S"></MenuItem>
			</MenuItem>
		</Menu>
		<StatusBar x:Name="statusBar" Background="#FFFFFFD4" Visibility="Collapsed" BorderBrush="#FFF59595" BorderThickness="2">
			<StatusBarItem x:Name="sbMessage">This is my status</StatusBarItem>
			<StatusBarItem HorizontalAlignment="Right">
				<Button x:Name="btnCloseStatusMessage" Background="#FFFFFFD4" BorderThickness="0" Click="btnCloseStatusMessage_Click">
					X
				</Button>
			</StatusBarItem>
		</StatusBar>
		<StackPanel x:Name="spMain" Orientation="Horizontal" Margin="6" >
			<StackPanel x:Name="spDecks" Orientation="Vertical">
				<TextBlock Text="Decks:" Width="Auto" Height="Auto" Foreground="#FF4C4C4C"/>
				<ListBox x:Name="lbDecks" SelectionChanged="lbDecks_SelectionChanged" Width="140" >
					<ListBox.ItemTemplate>
						<DataTemplate>
							<StackPanel Orientation="Horizontal">
								<TextBlock Text="{Binding Path=Name}" />
								<TextBlock Text="*" Width="Auto" Height="Auto" Visibility="{Binding Path=IsDirty, Converter={StaticResource BoolToVis}}" Foreground="DarkRed"/>
							</StackPanel>
						</DataTemplate>
					</ListBox.ItemTemplate>
				</ListBox>
				<Button x:Name="btnAddDeck" Click="btnAddDeck_Click" Margin="3, 6, 3, 0" Width="95" HorizontalAlignment="Left">
					Add Deck
				</Button>
				<Button x:Name="btnDeleteDeck" Click="btnDeleteDeck_Click" Margin="3" Width="95" HorizontalAlignment="Left">
					Delete Deck...
				</Button>
			</StackPanel>
			<StackPanel x:Name="spCards" Orientation="Vertical" Margin="20, 0, 0, 0">
				<StackPanel x:Name="spActiveDeck" Orientation="Horizontal" Margin="0, 0, 0, 8">
					<TextBlock Text="Deck Name: " Width="Auto" Height="Auto" Margin="0, 0, 5, 0" Foreground="#FF3C5EE5"/>
					<TextBox x:Name="tbxDeckName" Text="{Binding Name,UpdateSourceTrigger=PropertyChanged}" TextChanged="tbxDeckName_TextChanged" MinWidth="100"/>
				</StackPanel>
				<TextBlock x:Name="tbCards" Text="Cards:" Width="Auto" Height="Auto" Foreground="#FF4C4C4C"/>
				<ListBox x:Name="lbCards" SelectionChanged="lbCards_SelectionChanged" Width="200" >
					<ListBox.ItemTemplate>
						<DataTemplate>
							<StackPanel Orientation="Horizontal">
								<TextBlock Text="{Binding Path=Name}" />
								<TextBlock Text="*" Width="Auto" Height="Auto" Visibility="{Binding Path=IsDirty, Converter={StaticResource BoolToVis}}" Foreground="DarkRed"/>
							</StackPanel>
						</DataTemplate>
					</ListBox.ItemTemplate>
					<ListBox.ContextMenu>
						<ContextMenu>
							<MenuItem x:Name="cmMoveCardTo" Header="Move Card To" ContextMenuOpening="cmMoveCardTo_ContextMenuOpening" SubmenuOpened="cmMoveCardTo_SubmenuOpened">
								<MenuItem x:Name="placeHolder" Visibility="Collapsed"></MenuItem>
							</MenuItem>
						</ContextMenu>
					</ListBox.ContextMenu>
				</ListBox>
				<Button x:Name="btnAddCard" Click="btnAddCard_Click" Margin="3, 6, 3, 0" Width="95" HorizontalAlignment="Left">
					Add Card
				</Button>
				<Button x:Name="btnDeleteCard" Click="btnDeleteCard_Click" Margin="3" Width="95" HorizontalAlignment="Left">
					Delete Card...
				</Button>
			</StackPanel>

			<StackPanel x:Name="spSelectedCard" Orientation="Horizontal" Visibility="Visible">
				<StackPanel x:Name="spCardDetails" Orientation="Vertical" Margin="20, 0, 0, 0">
					<StackPanel Orientation="Horizontal" Margin="0, 0, 0, 8">
						<TextBlock Text="Card Name: " Width="Auto" Height="Auto" Margin="0, 0, 5, 0" Foreground="#FF3C5EE5"/>
						<TextBox x:Name="tbxCardName" Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}" TextChanged="tbxCardName_TextChanged" MinWidth="100"/>
						<CheckBox x:Name="ckbAvailable" IsChecked="{Binding Path=Available}" Margin="20, 0, 0, 0" Foreground="#FF3C5EE5">
							Available
						</CheckBox>
						<CheckBox x:Name="ckbUploaded" Margin="20, 0, 0, 0" IsChecked="{Binding Path=Uploaded}" Foreground="#FF3C5EE5">
							Uploaded
						</CheckBox>
					</StackPanel>

					<StackPanel Orientation="Vertical" Margin="0, 0, 0, 8">
						<TextBlock Text="Description: " Width="Auto" Height="Auto" Margin="0, 0, 10, 0" Foreground="#FF3C5EE5"/>
						<TextBox x:Name="tbxDescription" Text="{Binding Description}" AcceptsReturn="False" TextChanged="tbxDescription_TextChanged" Width="420" HorizontalAlignment="Left" Height="Auto" TextWrapping="Wrap"/>
					</StackPanel>

					<StackPanel Orientation="Vertical" Margin="0, 0, 0, 8">
						<TextBlock Text="Additional Instructions: " Width="Auto" Height="Auto" Margin="0, 0, 10, 0" Foreground="#FF3C5EE5"/>
						<TextBox x:Name="tbxAdditionalInstructions" Text="{Binding Path=AdditionalInstructions}" AcceptsReturn="False" Height="Auto" TextChanged="tbxAdditionalInstructions_TextChanged" Width="420"/>
					</StackPanel>

					<StackPanel Orientation="Horizontal" Margin="0, 14, 0, 0">
						<StackPanel Orientation="Vertical" Margin="0, 0, 0, 8">
							<TextBlock Text="Rarity: " Width="Auto" Height="Auto" Margin="0, 0, 10, 3" Foreground="#FF3C5EE5"/>
							<RadioButton x:Name="rbCommon" IsChecked="{Binding Path=Rarity, Converter={StaticResource EnumToBool}, ConverterParameter=Common}" Margin="20, 2, 9, 0">
								Common
							</RadioButton>
							<RadioButton x:Name="rbRare" IsChecked="{Binding Path=Rarity, Converter={StaticResource EnumToBool}, ConverterParameter=Rare}" Margin="20, 2, 9, 0">
								Rare
							</RadioButton>
							<RadioButton x:Name="rbEpic" IsChecked="{Binding Path=Rarity, Converter={StaticResource EnumToBool}, ConverterParameter=Epic}" Margin="20, 2, 9, 0">
								Epic
							</RadioButton>
							<RadioButton x:Name="rbLegendary" IsChecked="{Binding Path=Rarity, Converter={StaticResource EnumToBool}, ConverterParameter=Legendary}" Margin="20, 2, 9, 0">
								Legendary
							</RadioButton>
						</StackPanel>
						<StackPanel Orientation="Vertical" Margin="62, 0, 0, 8">
							<TextBlock Text="Probability Within Rarity: " Width="Auto" Height="Auto" Margin="0, 0, 10, 3" Foreground="#FF3C5EE5"/>
							<RadioButton x:Name="rbNormal" IsChecked="{Binding Path=ProbabilityWithinRarity, Converter={StaticResource EnumToBool}, ConverterParameter=Normal}" Margin="20, 2, 9, 0">
								Normal
							</RadioButton>
							<RadioButton x:Name="rbLittleLessFrequent" IsChecked="{Binding Path=ProbabilityWithinRarity, Converter={StaticResource EnumToBool}, ConverterParameter=LittleLessFrequent}" Margin="20, 2, 9, 0">
								Little Less Frequent
							</RadioButton>
							<RadioButton x:Name="rbLessFrequent" IsChecked="{Binding Path=ProbabilityWithinRarity, Converter={StaticResource EnumToBool}, ConverterParameter=LessFrequent}" Margin="20, 2, 9, 0">
								Less Frequent
							</RadioButton>
							<RadioButton x:Name="rbMuchLessFrequent" IsChecked="{Binding Path=ProbabilityWithinRarity, Converter={StaticResource EnumToBool}, ConverterParameter=MuchLessFrequent}" Margin="20, 2, 9, 0">
								Much Less Frequent
							</RadioButton>
						</StackPanel>
					</StackPanel>

					<StackPanel Orientation="Horizontal" Margin="0, 30, 0, 0">
						<StackPanel Orientation="Vertical" Margin="0, 0, 0, 8">
							<TextBlock Text="Card Expires: " Width="Auto" Height="Auto" Margin="0, 0, 10, 3" Foreground="#FF3C5EE5"/>
							<RadioButton x:Name="rbImmediately" IsChecked="{Binding Path=Expires, Converter={StaticResource EnumToBool}, ConverterParameter=Immediately}" Margin="20, 2, 9, 0">
								Immediately
							</RadioButton>
							<RadioButton x:Name="rbEndOfTurn" IsChecked="{Binding Path=Expires, Converter={StaticResource EnumToBool}, ConverterParameter=EndOfTurn}" Margin="20, 2, 9, 0">
								End of Turn
							</RadioButton>
							<RadioButton x:Name="rbEndOfNextTurn" IsChecked="{Binding Path=Expires, Converter={StaticResource EnumToBool}, ConverterParameter=EndOfNextTurn}" Margin="20, 2, 9, 0">
								End of Next Turn
							</RadioButton>
							<RadioButton x:Name="rbEndOfGame" IsChecked="{Binding Path=Expires, Converter={StaticResource EnumToBool}, ConverterParameter=EndOfGame}" Margin="20, 2, 9, 0">
								End of Game
							</RadioButton>
							<RadioButton x:Name="rbNever" IsChecked="{Binding Path=Expires, Converter={StaticResource EnumToBool}, ConverterParameter=Never}" Margin="20, 2, 9, 0">
								Never
							</RadioButton>
						</StackPanel>
						<StackPanel Orientation="Vertical" Margin="30, 0, 0, 0">
							<StackPanel Orientation="Horizontal" Margin="0, 0, 0, 8">
								<TextBlock Text="Fragments Required:" Width="Auto" Height="Auto" Margin="0, 0, 4, 0" Foreground="#FF3C5EE5"/>
								<TextBox x:Name="tbxFragmentsRequired" Text="{Binding Path=FragmentsRequired}" TextChanged="tbxFragmentsRequired_TextChanged" MinWidth="30"/>
							</StackPanel>

							<StackPanel Orientation="Horizontal" Margin="0, 10, 0, 8">
								<TextBlock Text="Cooldown:" Width="Auto" Height="Auto" Margin="0, 1, 4, 0" Foreground="#FF3C5EE5"/>
								<TextBox x:Name="tbxCooldown" Text="{Binding Path=Cooldown}" TextChanged="tbxCooldown_TextChanged" MinWidth="30"/>

								<TextBlock Text="Units:" Width="Auto" Height="Auto" Margin="10, 1, 4, 0" Foreground="#FF3C5EE5"/>
								<ComboBox x:Name="cmbCooldownUnits" ItemsSource="{Binding Source={StaticResource CooldownUnitsEnum}}" SelectedItem="{Binding Path=CooldownUnits}" Margin="0, -2, 0, 0" />
							</StackPanel>

							<StackPanel Orientation="Horizontal" Margin="0, 10, 0, 0">
								<CheckBox x:Name="ckbFinalizeLater" IsChecked="{Binding Path=FinalizeLater}" Foreground="#FF3C5EE5">
									Finalize Later
								</CheckBox>
							</StackPanel>
						</StackPanel>
					</StackPanel>

					<TextBlock Text="Fields:" Width="Auto" Height="Auto" Margin="0, 20, 0, 0" Foreground="#FF4C4C4C"/>
					<StackPanel Orientation="Horizontal">
						<ListBox x:Name="lbFields" SelectionChanged="lbFields_SelectionChanged" Width="130" >
							<ListBox.ItemTemplate>
								<DataTemplate>
									<StackPanel Orientation="Horizontal">
										<TextBlock Text="{Binding Path=Name}" />
										<TextBlock Text="*" Width="Auto" Height="Auto" Visibility="{Binding Path=IsDirty, Converter={StaticResource BoolToVis}}" Foreground="DarkRed"/>
									</StackPanel>
								</DataTemplate>
							</ListBox.ItemTemplate>
						</ListBox>
						<StackPanel x:Name="spActiveField" Orientation="Vertical" Margin="20, 0, 0, 0">
							<StackPanel Orientation="Horizontal">
								<TextBlock Text="Field Name:" Width="Auto" Height="Auto" Margin="0, 1, 4, 0" Foreground="#FF3C5EE5"/>
								<TextBox x:Name="tbxFieldName" Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}" TextChanged="tbxFieldName_TextChanged" MinWidth="100"/>
							</StackPanel>
							<StackPanel Orientation="Horizontal" Margin="0, 18, 0, 0">
								<TextBlock Text="Display Prompt:" Width="Auto" Height="Auto" Margin="0, 1, 4, 0" Foreground="#FF3C5EE5"/>
								<TextBox x:Name="tbxFieldLabel" Text="{Binding Label}" MinWidth="100"/>
							</StackPanel>
							<StackPanel Orientation="Horizontal" Margin="0, 18, 0, 0">
								<TextBlock Text="Type:" Width="Auto" Height="Auto" Margin="0, 1, 4, 0" Foreground="#FF3C5EE5"/>
								<ComboBox x:Name="cmbFieldType" ItemsSource="{Binding Source={StaticResource FieldTypeEnum}}" SelectedItem="{Binding Path=Type}" Margin="0, -2, 0, 0" />
							</StackPanel>
							<CheckBox x:Name="ckFieldIsRequired" Margin="0, 18, 0, 0" IsChecked="{Binding Required}" Foreground="#FF3C5EE5">
								Required
							</CheckBox>
						</StackPanel>
					</StackPanel>
					<Button x:Name="btnAddField" Click="btnAddField_Click" Margin="3, 6, 3, 0" Width="95" HorizontalAlignment="Left">
						Add Field
					</Button>
					<Button x:Name="btnDeleteField" Click="btnDeleteField_Click" Margin="3" Width="95" HorizontalAlignment="Left">
						Delete Field...
					</Button>
				</StackPanel>

				<StackPanel x:Name="spLayersList" Orientation="Vertical" Margin="20, 0, 0, 0">
					<Button x:Name="btnCardStylePicker" Content="Card Style" Width="Auto" Padding="8,0,8,0" Height="30" HorizontalAlignment="Left" Margin="0, 0, 0, 8" PreviewMouseDown="btnCardStylePicker_MouseDown">
						<Button.ContextMenu>
							<ContextMenu x:Name="mnuCardStyle" PlacementRectangle="{Binding RelativeSource={RelativeSource Self}}">
							</ContextMenu>
						</Button.ContextMenu>

						<Button.Triggers>
							<EventTrigger SourceName="btnCardStylePicker" RoutedEvent="Button.Click">
								<BeginStoryboard>
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="mnuCardStyle" Storyboard.TargetProperty="(ContextMenu.IsOpen)">
											<DiscreteObjectKeyFrame KeyTime="0:0:0">
												<DiscreteObjectKeyFrame.Value>
													<System:Boolean>True</System:Boolean>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</BeginStoryboard>
							</EventTrigger>
						</Button.Triggers>
					</Button>

					<TextBlock Text="Layers:" Width="Auto" Height="Auto"/>
					<ListBox x:Name="lbCardLayers" SelectionChanged="lbCardLayers_SelectionChanged" Width="210" HorizontalAlignment="Left">
						<ListBox.ItemTemplate>
							<DataTemplate>
								<Grid Height="Auto" Width="195">
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="*"/>
										<ColumnDefinition Width="Auto"/>
										</Grid.ColumnDefinitions>
									<TextBlock Text="{Binding Path=DisplayName}"/>
									<Viewbox Grid.Column="1" Width="20" Height="20" MouseDown="ToggleVisibility_MouseDown" Visibility="{Binding Path=IsVisible, Converter={StaticResource BoolToVis}}">
										<Canvas Width="165" Height="97">
											<Path Fill="#FF7F7F7F">
												<Path.Data>
													<PathGeometry Figures="M82.5,-0.5C115.9375,-0.5,145.4375,17.125,162.8125,43.875L165.5,48.5 162.8125,53.1875C145.4375,79.9375,115.9375,97.5,82.5,97.5C49.125,97.5,19.625,79.9375,2.25,53.1875L-0.5,48.5 2.25,43.875C19.625,17.125,49.125,-0.5,82.5,-0.5z" />
												</Path.Data>
											</Path>
											<Path Fill="#FFF2F2F2">
												<Path.Data>
													<PathGeometry Figures="M83,6.5C113.4375,6.5,140.25,21.9375,156.0625,45.4375L158.5,49.5 156.0625,53.625C140.25,77.0625,113.4375,92.5,83,92.5C52.625,92.5,25.8125,77.0625,10,53.625L7.5,49.5 10,45.4375C25.8125,21.9375,52.625,6.5,83,6.5z" />
												</Path.Data>
											</Path>
											<Path Fill="#FF404040">
												<Path.Data>
													<PathGeometry Figures="M49.5,49C49.5,30.5,64.5,15.5,83,15.5C101.5,15.5,116.5,30.5,116.5,49C116.5,67.5,101.5,82.5,83,82.5C64.5,82.5,49.5,67.5,49.5,49" />
												</Path.Data>
											</Path>
										</Canvas>
									</Viewbox>
									<Viewbox Grid.Column="1" Width="20" Height="20" MouseDown="ToggleVisibility_MouseDown" Visibility="{Binding Path=IsHidden, Converter={StaticResource BoolToVis}}">
									  <Canvas Width="165" Height="97">
										<Canvas>
										  <Canvas.Clip>
											<RectangleGeometry Rect="1,0,165,98" />
										  </Canvas.Clip>
										  <Path Fill="#FF7F7F7F">
											<Path.Data>
											  <PathGeometry Figures="M83,-0.5C116.25,-0.5,145.5625,17.125,162.8125,43.875L165.5,48.5 162.8125,53.1875C145.5625,79.9375,116.25,97.5,83,97.5C49.8125,97.5,20.5,79.9375,3.25,53.1875L0.5,48.5 3.25,43.875C20.5,17.125,49.8125,-0.5,83,-0.5z" />
											</Path.Data>
										  </Path>
										</Canvas>
										<Path Fill="#FFF2F2F2">
										  <Path.Data>
											<PathGeometry Figures="M82,6.5C112.4375,6.5,139.25,21.8125,155.0625,45L157.5,49 155.0625,53.0625C139.25,76.25,112.4375,91.5,82,91.5C51.625,91.5,24.8125,76.25,9,53.0625L6.5,49 9,45C24.8125,21.8125,51.625,6.5,82,6.5z" />
										  </Path.Data>
										</Path>
										<Path Fill="#FF7F7F7F">
										  <Path.Data>
											<PathGeometry Figures="M82.5,18.5C115.5625,18.5,144.625,28.75,161.8125,44.3125L164.5,47 161.8125,49.75C144.625,65.3125,115.5625,75.5,82.5,75.5C49.5,75.5,20.375,65.3125,3.1875,49.75L0.5,47 3.1875,44.3125C20.375,28.75,49.5,18.5,82.5,18.5z" />
										  </Path.Data>
										</Path>
										<Path Fill="#FFF2F2F2">
										  <Path.Data>
											<PathGeometry Figures="M83,5.5C110.6875,5.5,135.5,18.125,152.25,38L158.5,46.375 157.6875,47.125C141.25,60.625,113.3125,69.5,81.6875,69.5C54,69.5,29.1875,62.75,12.375,51.9375L6.5,47.6875 7,46.9375C23.4375,21.9375,51.375,5.5,83,5.5z" />
										  </Path.Data>
										</Path>
									  </Canvas>
									</Viewbox>

								</Grid>
							</DataTemplate>
						</ListBox.ItemTemplate>
					</ListBox>
					
					<ListBox x:Name="lbAlternates" SelectionChanged="lbAlternates_SelectionChanged">
						<ListBox.ItemTemplate>
							<DataTemplate>
								<TextBlock Text="{Binding Path=AlternateName}"/>
							</DataTemplate>
						</ListBox.ItemTemplate>
					</ListBox>

					<Button x:Name="btnLoadSpellImage" Content="Spell Image" Width="Auto" Padding="8,0,8,0" Height="30" HorizontalAlignment="Left" Margin="0, 0, 0, 8" PreviewMouseDown="btnLoadSpellImage_PreviewMouseDown">
						<Button.ContextMenu>
							<ContextMenu x:Name="mnuPickSpell" PlacementRectangle="{Binding RelativeSource={RelativeSource Self}}">
							</ContextMenu>
						</Button.ContextMenu>

						<Button.Triggers>
							<EventTrigger SourceName="btnLoadSpellImage" RoutedEvent="Button.Click">
								<BeginStoryboard>
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="mnuPickSpell" Storyboard.TargetProperty="(ContextMenu.IsOpen)">
											<DiscreteObjectKeyFrame KeyTime="0:0:0">
												<DiscreteObjectKeyFrame.Value>
													<System:Boolean>True</System:Boolean>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</BeginStoryboard>
							</EventTrigger>
						</Button.Triggers>
					</Button>
				</StackPanel>

				<Grid x:Name="grdLayerDetails" Height="Auto" Width="Auto" Margin="20, 0, 0, 0">
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="Auto"/>
						<ColumnDefinition Width="Auto"/>
						<ColumnDefinition Width="Auto"/>
						<ColumnDefinition Width="Auto"/>
					</Grid.ColumnDefinitions>
					<Grid.RowDefinitions>
						<RowDefinition Height="Auto"/>
						<RowDefinition Height="Auto"/>
						<RowDefinition Height="Auto"/>
						<RowDefinition Height="Auto"/>
						<RowDefinition Height="Auto"/>
						<RowDefinition Height="Auto"/>
						<RowDefinition Height="Auto"/>
					</Grid.RowDefinitions>

					<StackPanel Orientation="Horizontal" Margin="0, 0, 0, 8" Grid.ColumnSpan="2">
						<TextBlock Text="Card Text: " Width="Auto" Height="Auto" Margin="0, 0, 5, 0" Foreground="#FF3C5EE5"/>
						<TextBox x:Name="tbxCardText" Text="{Binding Text, UpdateSourceTrigger=PropertyChanged}" TextChanged="tbxCardName_TextChanged" MinWidth="250" Margin="0, 0, 20, 0"/>
					</StackPanel>
					
					<StackPanel Orientation="Horizontal" Grid.Row="1" Grid.ColumnSpan="2" Width="300" HorizontalAlignment="Left" Margin="0, -3, 0, 0">
						<TextBlock Text="Font Size: " Width="Auto" Height="Auto" Margin="0, 0, 0, 3" Foreground="#FF3C5EE5"/>
						<RadioButton x:Name="rbSmall" IsChecked="{Binding Path=FontScale, Converter={StaticResource EnumToBool}, ConverterParameter=Small}" Margin="4, 2, 9, 0">
							Small
						</RadioButton>
						<RadioButton x:Name="rbNormalSize" IsChecked="{Binding Path=FontScale, Converter={StaticResource EnumToBool}, ConverterParameter=Normal}" Margin="4, 2, 9, 0">
							Normal
						</RadioButton>
						<RadioButton x:Name="rbLarge" IsChecked="{Binding Path=FontScale, Converter={StaticResource EnumToBool}, ConverterParameter=Large}" Margin="4, 2, 9, 0">
							Large
						</RadioButton>
					</StackPanel>

					<StackPanel x:Name="spSelectedLayerIndicator" Orientation="Horizontal" Grid.Row="2" Grid.ColumnSpan="2" Margin="0, 6, 0, 6">
						<TextBlock x:Name="txblSelectedLayer" Text="Selected Layer: " Width="Auto" Height="Auto" Foreground="#FF4C4C4C"/>
						<TextBlock x:Name="tbLayerName" Text="{Binding Name}" Width="Auto" Height="Auto"/>
					</StackPanel>

					<Canvas x:Name="cvsLayers" Grid.Column="1" Grid.Row="3" Width="280" Height="424">
						<Grid x:Name="grdCardText" Canvas.Left="{Binding GridLeft}" Canvas.Top="{Binding GridTop}" Width="{Binding GridWidth}" Height="{Binding GridHeight}">
							<Grid.LayoutTransform>
								<RotateTransform x:Name="rotTx4CardText" Angle="{Binding TextAngle}"></RotateTransform>
							</Grid.LayoutTransform>
							<Viewbox>
								<TextBlock x:Name="tbItemName" Text="{Binding Text}" Width="250" TextAlignment="Center" HorizontalAlignment="Stretch" VerticalAlignment="Center" LineStackingStrategy="BlockLineHeight" 
									LineHeight="{Binding TextLineHeight}" FontSize="{Binding TextFontSize}" TextWrapping="Wrap" FontFamily="Enchanted Land" Margin="4" FontWeight="Bold" Foreground="{Binding FontBrush}">
								</TextBlock>
							</Viewbox>
						</Grid>
					</Canvas>

					<TextBlock Grid.Row="4" Text="X offset:" Width="Auto" Height="Auto" VerticalAlignment="Bottom" Margin="0, 8, 0, 3" Foreground="#FF3C5EE5"/>
					<Slider Grid.Row="4" Grid.Column="1" Grid.RowSpan="2" x:Name="sliderOffsetX" Value="{Binding OffsetX}" Minimum="-200" Maximum="200" Width="305" Margin="0, 8, 0, 0" VerticalAlignment="Bottom" ValueChanged="sliderOffsetX_ValueChanged"/>
					<StackPanel Grid.Row="3" Grid.Column="2" Grid.RowSpan="4" Orientation="Vertical" Margin="0, 0, 0, 12">
						<StackPanel Orientation="Vertical">
							<TextBlock Text="Y" Width="Auto" Height="Auto" HorizontalAlignment="Center" Foreground="#FF3C5EE5" Margin="7, 0, 0, 0"/>
							<TextBlock Text="offset:" Width="Auto" Height="Auto" HorizontalAlignment="Center" Foreground="#FF3C5EE5" Margin="7, 0, 0, 0"/>
						</StackPanel>
						<Slider x:Name="sliderOffsetY" Value="{Binding OffsetY}" Minimum="-400" Maximum="400" IsDirectionReversed="True" Orientation="Vertical" Height="388" Margin="14, 0, 0, 0" ValueChanged="sliderOffsetY_ValueChanged"></Slider>
					</StackPanel>

					<StackPanel Grid.Row="6" Orientation="Vertical" VerticalAlignment="Center" Margin="0, 10, 0, 3">
						<TextBlock Text="Horizontal" Width="Auto" Height="Auto" HorizontalAlignment="Center" Foreground="#FF3C5EE5"/>
						<TextBlock Text="stretch:" Width="Auto" Height="Auto" HorizontalAlignment="Center" Foreground="#FF3C5EE5"/>
					</StackPanel>
					<Slider Grid.Row="6" Grid.Column="1" Grid.ColumnSpan="3" x:Name="sliderHorizontalStretch" Value="{Binding ScaleX}" Minimum="0.1" Maximum="3" Width="354" Margin="0, 14, 0, 0" VerticalAlignment="Center" HorizontalAlignment="Left"/>
					<StackPanel Grid.Row="3" Grid.Column="3" Grid.RowSpan="4" Orientation="Vertical" Margin="10, 0, 0, 12">
						<StackPanel Orientation="Vertical">
							<TextBlock Text="Vertical" Width="Auto" Height="Auto" HorizontalAlignment="Center" Foreground="#FF3C5EE5"/>
							<TextBlock Text="stretch:" Width="Auto" Height="Auto" HorizontalAlignment="Center" Foreground="#FF3C5EE5"/>
						</StackPanel>
						<Slider x:Name="sliderVerticalStretch" Value="{Binding ScaleY}" Minimum="0.1" Maximum="3" IsDirectionReversed="True" Orientation="Vertical" Height="424" Margin="10, 0, 0, 0" ></Slider>
					</StackPanel>
					<Button x:Name="btnResetOffsets" ToolTip="Reset offsets to 0" Grid.Column="2" Grid.Row="4" VerticalAlignment="Center" Width="30" Height="30" Margin="-8, -4, 0, 0" Click="btnResetOffsets_Click" Visibility="{Binding Path=OffsetChanged, Converter={StaticResource BoolToVis}}">
						X
					</Button>
					<Button x:Name="btnResetScale" ToolTip="Reset scale to 1" Grid.Column="3" Grid.Row="6" VerticalAlignment="Center" Width="30" Height="30" Margin="0, 0, 0, 0" Click="btnResetScale_Click" Visibility="{Binding Path=ScaleChanged, Converter={StaticResource BoolToVis}}">
						X
					</Button>
				</Grid>

				<Grid x:Name="grdLayerDetail" Height="Auto" Width="Auto" Margin="30, 69, 0, 0">
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="Auto"/>
						<ColumnDefinition Width="Auto"/>
						<ColumnDefinition Width="Auto"/>
					</Grid.ColumnDefinitions>
					<Grid.RowDefinitions>
						<RowDefinition Height="Auto"/>
						<RowDefinition Height="Auto"/>
						<RowDefinition Height="Auto"/>
						<RowDefinition Height="Auto"/>
					</Grid.RowDefinitions>
					<TextBlock Text="Hue shift:" Width="Auto" Height="Auto" Margin="0, 1, 0, 0" Foreground="#FF3C5EE5"/>
					<Slider Grid.Column="1" x:Name="sliderHue" Minimum="-180" Maximum="180" Value="{Binding Hue}" Width="120" Margin="0, 0, 0, 0" ValueChanged="sliderHue_ValueChanged"></Slider>
					<Button Grid.Column="2" x:Name="btnResetHue" ToolTip="Reset hue to 0" Width="20" Height="20" Margin="4, -1, 0, 0" Click="btnResetHue_Click" Visibility="{Binding Path=HueChanged, Converter={StaticResource BoolToVis}}">
						X
					</Button>

					<TextBlock Grid.Row="1" Text="Saturation:" Width="Auto" Height="Auto" Margin="0, 11, 7, 0" Foreground="#FF3C5EE5"/>
					<Slider Grid.Column="1" Grid.Row="1" x:Name="sliderSaturation" Value="{Binding Sat}" Minimum="-100" Maximum="100" Width="120" Margin="0, 10, 0, 0" ValueChanged="sliderSaturation_ValueChanged"></Slider>
					<Button Grid.Row="1" Grid.Column="2" x:Name="btnResetSaturation" ToolTip="Reset saturation to 0" Width="20" Height="20" Margin="4, 9, 0, 0" Click="btnResetSaturation_Click" Visibility="{Binding Path=SatChanged, Converter={StaticResource BoolToVis}}">
						X
					</Button>


					<TextBlock Grid.Row="2" Text="Lightness:" Width="Auto" Height="Auto" Margin="0, 11, 7, 0" Foreground="#FF3C5EE5"/>
					<Slider Grid.Column="1" Grid.Row="2" x:Name="sliderLightness" Value="{Binding Light}" Minimum="-100" Maximum="100" Width="120" Margin="0, 10, 0, 0"></Slider>
					<Button Grid.Row="2" Grid.Column="2" x:Name="btnResetLightness" ToolTip="Reset lightness to 0" Width="20" Height="20" Margin="4, 9, 0, 0" Click="btnResetLightness_Click" Visibility="{Binding Path=LightChanged, Converter={StaticResource BoolToVis}}">
						X
					</Button>

					<TextBlock Grid.Row="3" Text="Contrast:" Width="Auto" Height="Auto" Margin="0, 11, 7, 0" Foreground="#FF3C5EE5"/>
					<Slider Grid.Column="1" Grid.Row="3" x:Name="sliderContrast" Value="{Binding Contrast}" Minimum="-100" Maximum="100" Width="120" Margin="0, 10, 0, 0"></Slider>
					<Button Grid.Row="3" Grid.Column="2" x:Name="btnResetContrast" ToolTip="Reset contrast to 0" Width="20" Height="20" Margin="4, 9, 0, 0" Click="btnResetContrast_Click" Visibility="{Binding Path=ContrastChanged, Converter={StaticResource BoolToVis}}">
						X
					</Button>
				</Grid>
			</StackPanel>
		</StackPanel>
	</StackPanel>
</Window>
